#!/bin/bash

#written by chn555 && BigRush
#used for quick post installation setup of new install XFCE Manjaro.


#set flags, right now only verbose
while getopts "v" arg; do
  case $arg in
    v)
      echo "Starting in verbose mode"
      verbose=1;;
    *)
      $arg flag invalid;;
    esac
done

update ()
{
# update system
if [[ $verbose -eq 1 ]]; then
  sudo pacman -Syu --noconfirm
  if [[ $? -eq 0 ]];then
    echo "System update completed successfully, moving on"
  else
      echo "Something went wrong, stopping. check internet connection"
      exit 1
  fi
  #install pacaur if not installed already
  sudo pacman -S pacaur --needed --noconfirm
else
    sudo pacman -Syu --noconfirm >> /tmp/chn-log 2>> /tmp/chn-error-log
    if [[ $? -eq 0 ]];then
      echo "System update completed successfully, moving on"
    else
      echo "Something went wrong, stopping. check internet connection"
      exit 1
    fi
    #install pacaur if not installed already
  sudo pacman -S pacaur --needed --noconfirm >> /tmp/chn-log 2>> /tmp/chn-error-log
fi
}




installation ()
{
  if [[ $verbose -eq 1 ]]; then
    echo "setting keys for download"
    #set keys required for discord install
    gpg --recv-keys 8F0871F202119294
    echo "downloading and installing software"
    printf "\n"
    #a list of programs to be installed
    apps=(git discord vim openssh steam chromium virtualbox ncdu tilix speedtest-cli)
    for app in ${apps[*]}; do
      echo "Installing $app, please wait"
      pacaur -S $app --noconfirm --needed --noedit
      if [[ $? -eq 0 ]]; then
        echo "$app installed successfully"
        printf "\n"
      else
        printf "\n"
        echo "installation of $app failed, see logs"
      fi
      sleep 1
    done
    echo "downloading and installing themes"
    pacaur -S -needed adapta-gtk-theme-git papirus-icon-theme-git --noconfirm --noedit
    sleep 3
    echo "Setting themes"
    printf "\n"
    #  xfconf-query -c xsettings -p /Net/ThemeName -s "Adapta-Nokto"
    #  xfconf-query -c xsettings -p /Net/IconThemeName -s "Papirus-Adapta"
else
  echo "setting keys for download"
  gpg --recv-keys 8F0871F202119294 >> /tmp/chn-log 2>> /tmp/chn-error-log
  echo "downloading and installing software"
  printf "\n"
  apps=(git discord vim openssh steam chromium virtualbox ncdu tilix speedtest-cli)
  for app in ${apps[*]}; do
    echo "Installing $app, please wait"
    pacaur -S $app --noconfirm --needed --noedit >> /tmp/chn-log 2>> /tmp/chn-error-log
    if [[ $? -eq 0 ]]; then
      echo "$app installed successfully"
      printf "\n"
    else
      printf "\n"
      echo "installation of $app failed, see logs"
    fi
    sleep 1
  done
  echo "downloading and installing themes"
  pacaur -S -needed adapta-gtk-theme-git papirus-icon-theme-git --noconfirm --noedit >> /tmp/chn-log 2>> /tmp/chn-error-log
  sleep 3
  echo "Setting themes"
  printf "\n"
  #  xfconf-query -c xsettings -p /Net/ThemeName -s "Adapta-Nokto" >> /tmp/chn-log 2>> /tmp/chn-error-log
  #  xfconf-query -c xsettings -p /Net/IconThemeName -s "Papirus-Adapta" >> /tmp/chn-log 2>> /tmp/chn-error-log
fi
}


grub ()
{
if [[ $verbose -eq 1 ]]; then
  #set grub timeout to 0
  sudo sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/' /etc/default/grub
  #set hidden timeout to 1 so you can access the grub if you press esc while booting
  sudo sed -i 's/#GRUB_HIDDEN_TIMEOUT=1/GRUB_HIDDEN_TIMEOUT=1/' /etc/default/grub
  #enable hidden timeout
  sudo sed -i 's/#GRUB_HIDDEN_TIMEOUT_QUIET=true/GRUB_HIDDEN_TIMEOUT_QUIET=true/' /etc/default/grub
  #apply settings to grubb
  sudo grub-mkconfig
else

  #set grub timeout to 0
  sudo sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/' /etc/default/grub
  #set hidden timeout to 1 so you can access the grub if you press esc while booting
  sudo sed -i 's/#GRUB_HIDDEN_TIMEOUT=1/GRUB_HIDDEN_TIMEOUT=1/' /etc/default/grub
  #enable hidden timeout
  sudo sed -i 's/#GRUB_HIDDEN_TIMEOUT_QUIET=true/GRUB_HIDDEN_TIMEOUT_QUIET=true/' /etc/default/grub
  #apply settings to grubb
  sudo grub-mkconfig
fi
}

keybind ()
{
xmodmap -e "keycode 67=XF86Back NoSymbol XF86Back"
xmodmap -e "keycode 68=XF86Forward NoSymbol XF86Forward"
xmodmap -e "keycode 69=XF86Reload NoSymbol XF86Reload"
xmodmap -e "keycode 72=XF86MonBrightnessDown NoSymbol XF86MonBrightnessDown"
xmodmap -e "keycode 73=XF86MonBrightnessUp NoSymbol XF86MonBrightnessUp"
xmodmap -e "keycode 74=XF86AudioMute NoSymbol XF86AudioMute"
xmodmap -e "keycode 75=XF86AudioLowerVolume NoSymbol XF86AudioLowerVolume"
xmodmap -e "keycode 76=XF86AudioRaiseVolume NoSymbol XF86AudioRaiseVolume"
xmodmap -e "keycode 114= Right End Right"
xmodmap -e "keycode 113= Left Home Right"

#audio keys bind
echo  \"amixer set Master toggle\" > ~/.xbindkeysrc
echo     m:0x0 + c:121  >> ~/.xbindkeysrc
echo   XF86AudioMute  >> ~/.xbindkeysrc
echo \"amixer set PCM 2dB+\" >> ~/.xbindkeysrc
echo     m:0x0 + c:123 >> ~/.xbindkeysrc
echo     XF86AudioRaiseVolume >> ~/.xbindkeysrc
echo \"amixer set PCM 2dB-\" >> ~/.xbindkeysrc
echo    m:0x0 + c:122 >> ~/.xbindkeysrc
echo    XF86AudioLowerVolume  >> ~/.xbindkeysrc
}

linux-samus ()
{
if [[ $verbose -eq 1 ]]; then
  cd ~
  git clone --depth=1 https://github.com/raphael/linux-samus
  bash ~/linux-samus/scripts/setup/audio/enable-audio.sh
  bash ~/linux-samus/scripts/setup/audio/enable-speakers.sh
else
  cd ~
  git clone --depth=1 https://github.com/raphael/linux-samus >> /tmp/chn-log 2>> /tmp/chn-error-log
  bash ~/linux-samus/scripts/setup/audio/enable-audio.sh >> /tmp/chn-log 2>> /tmp/chn-error-log
  bash ~/linux-samus/scripts/setup/audio/enable-speakers.sh >> /tmp/chn-log 2>> /tmp/chn-error-log
fi
}



echo Updating system
printf "\n"
sleep 1
update  || echo "Update failed"
printf "\n"

echo Installing software
sleep 1
installation && echo Software installed || echo Installation failed, some were installed, see log
printf "\n"

echo Configuring GRUB
sleep 1
grub && echo GRUB configured and updated) ||echo configuring GRUB failed, system might be fucked, good luck.
printf "\n"

echo Setting device specific Setting
sleep 1
linux-samus && echo "linux-samus used successfully, audio should be fine now"  || echo "Something went wrong"
printf "\n"

echo Setting keyboard binds
sleep 1
keybind && echo "Key binding set" || echo Key binding failed, moving on.
printf "\n"

echo Done, enjoy,

#TODO set themes, I dont think that works yet
#TODO check virtualbox, i think further modules are needed, maybe set a machine
#TODO add verbose
